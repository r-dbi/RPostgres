% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transactions.R
\docType{methods}
\name{postgres-transactions}
\alias{postgres-transactions}
\alias{dbBegin,PqConnection-method}
\alias{dbCommit,PqConnection-method}
\alias{dbRollback,PqConnection-method}
\title{Transaction management.}
\usage{
\S4method{dbBegin}{PqConnection}(conn)

\S4method{dbCommit}{PqConnection}(conn)

\S4method{dbRollback}{PqConnection}(conn)
}
\arguments{
\item{conn}{a \code{\linkS4class{PqConnection}} object, produced by
\code{\link[DBI]{dbConnect}}}
}
\value{
A boolean, indicating success or failure.
}
\description{
\code{dbBegin} starts a transaction. \code{dbCommit} and \code{dbRollback}
end the transaction by either committing or rolling back the changes.
}
\examples{
library(DBI)
con <- dbConnect(RPostgres::Postgres())
dbWriteTable(con, "USarrests", datasets::USArrests, temporary = TRUE)
dbGetQuery(con, 'SELECT count(*) from "USarrests"')

dbBegin(con)
dbGetQuery(con, 'DELETE from "USarrests" WHERE "Murder" > 1')
dbGetQuery(con, 'SELECT count(*) from "USarrests"')
dbRollback(con)

# Rolling back changes leads to original count
dbGetQuery(con, 'SELECT count(*) from "USarrests"')

dbRemoveTable(con, "USarrests")
dbDisconnect(con)
}
